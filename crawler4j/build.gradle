description 'crawler4j: Open Source Web Crawler for Java'

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

configurations.all {
    it.exclude group: 'commons-logging'
    it.exclude group: 'log4j'
    it.exclude group: 'org.apache.logging.log4j'
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.22'
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.22'
    compile(group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5') {
        exclude(module: 'commons-logging')
    }
    compile group: 'com.sleepycat', name: 'je', version: '18.3.12'
    compile(group: 'org.apache.tika', name: 'tika-parsers', version: '1.17') {
        exclude(module: 'poi-ooxml')
        exclude(module: 'poi-scratchpad')
        exclude(module: 'poi-ooxml')
        exclude(module: 'poi-ooxml-schemas')
        exclude(module: 'pdfbox')
        exclude(module: 'pdfbox-tools')
        exclude(module: 'jempbox')
        exclude(module: 'jmatio')
        exclude(module: 'jackcess')
        exclude(module: 'jackcess-encrypt')
        exclude(module: 'xz')
        exclude(module: 'junrar')
        exclude(module: 'opennlp-tools')
        exclude(module: 'sis-utility')
        exclude(module: 'sis-netcdf')
        exclude(module: 'sis-metadata')
        exclude(module: 'geoapi')
        exclude(module: 'java-libpst')
        exclude(module: 'rome')
        exclude(module: 'json')
        exclude(module: 'netcdf4')
        exclude(module: 'grib')
        exclude(module: 'cdm')
        exclude(module: 'httpservices')
        exclude(module: 'vorbis-java-tika')
        exclude(module: 'vorbis-java-core')
        exclude(module: 'asm')
        exclude(module: 'isoparser')
        exclude(module: 'metadata-extractor')
        exclude(module: 'commons-csv')
        exclude(module: 'commons-exec')
        exclude(module: 'commons-compress')
        exclude(module: 'commons-codec')
        exclude(module: 'json-simple')
        exclude(module: 'gson')
        exclude(module: 'boilerpipe')
        exclude(module: 'juniversalchardet')
        exclude(module: 'jhighlight')
        exclude(module: 'bcmail-jdk15on')
        exclude(module: 'bcprov-jdk15on')
        exclude(module: 'cxf-rt-rs-client')
        exclude(module: 'jackson-core')
        exclude(module: 'json')
        exclude(module: 'sentiment-analysis-parser')
    }
    compile group: 'io.github.pgalbraith', name: 'url-detector', version: '0.1.20'
    compile group: 'com.google.guava', name: 'guava', version: '26.0-jre'
    compile group: 'de.malkusch.whois-server-list', name: 'public-suffix-list', version: '2.2.0'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.14.0'
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.4'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'crawler4j'
                description = 'crawler4j: Open Source Web Crawler for Java'
                url = 'https://github.com/yasserg/crawler4j'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'yasserg'
                        name = 'Yasser Ganjisaffar'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:yasserg/crawler4j.git'
                    developerConnection = 'scm:git:git@github.com:yasserg/crawler4j.git'
                    url = 'https://github.com/yasserg/crawler4j'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username "$ossrhUsername"
                password "$ossrhPassword"
            }
        }
    }
}
